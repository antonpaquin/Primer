Convolutional neural networks (CNNs) are the fundamental machine learning algorithm for image recognition. 
Companies like Google do a lot of image recognition, so something like this could be important to them.

Let's start with an image: it's got a bunch of pixels in a 2d grid, with 3 channels (red, green, blue).
We're going to process it with a bunch of filters.
A filter is a 3D array of weights -- predefined values that were generated by the training process.
It's dimensions are (width, height, channels)
We'll generally have a bunch of filters per layer. This is 

To run the first layer of out CNN, we will:
	1. Take an 3x3 section of the image
		This actually is 3x3x3 (remember, three channels) 
	2. Multiply elementwise with the filter, and take the sum of these products
	3. Add a bias term (a constant)
	4. If it's negative, set it to zero (rectified linear activation)
		This makes the filter nonlinear, which is important
	5. Repeat 1-4 for each 3x3 square of the image
	6. Repeat 1-5 for each filter in our layer (the first layer has 64 filters)

There are some edge cases for what to do with the pixels at the borders of the image, but that's the gist
of a convolution layer.
